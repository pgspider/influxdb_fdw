--SET log_min_messages=debug1;
--SET client_min_messages=debug1;
SET datestyle=ISO;
-- timestamp with time zone differs based on this
SET timezone='UTC';
CREATE EXTENSION influxdb_fdw;
CREATE SERVER server1 FOREIGN DATA WRAPPER influxdb_fdw OPTIONS
(dbname 'mydb', host 'http://localhost', port '8086') ;
CREATE USER MAPPING FOR CURRENT_USER SERVER server1 OPTIONS(user 'user', password 'pass');
-- import time column as timestamp and text type
IMPORT FOREIGN SCHEMA public FROM SERVER server1 INTO public OPTIONS(import_time_text 'true');
--ALTER EXTENSION influxdb_fdw ADD FUNCTION postgres_fdw_abs(int);
--ALTER SERVER server1 OPTIONS (ADD extensions 'influxdb_fdw');
SELECT * FROM t4;
          time          |      time_text       | tag1 | tag2 | value1 | value2 
------------------------+----------------------+------+------+--------+--------
 1970-01-01 00:00:00+00 | 1970-01-01T00:00:00Z | a    | x    |      1 |    100
 1970-01-01 00:00:01+00 | 1970-01-01T00:00:01Z | a    | y    |      2 |    100
 1970-01-01 00:00:02+00 | 1970-01-01T00:00:02Z | a    | x    |      3 |    100
 1970-01-01 00:00:03+00 | 1970-01-01T00:00:03Z | b    | y    |     10 |    200
 1970-01-01 00:00:04+00 | 1970-01-01T00:00:04Z | b    | z    |     20 |    200
 1970-01-01 00:00:05+00 | 1970-01-01T00:00:05Z | b    | z    |     30 |    200
(6 rows)

EXPLAIN (verbose)  
SELECT sum("value1"),influx_time(time,interval '1s', interval '0.00001s'),tag1 FROM "t4" WHERE time >= '1970-01-01 00:00:00+00' and time <= '1970-01-01 0:00:05+00' 
GROUP BY influx_time(time,interval '1s', interval '0.00001s'), tag1;
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=48)
   Output: (sum(value1)), (influx_time("time", '@ 1 sec'::interval, '@ 0.00001 secs'::interval)), tag1
   InfluxDB query: SELECT sum("value1") FROM "t4" WHERE ((time >= '1970-01-01 00:00:00')) AND ((time <= '1970-01-01 00:00:05')) GROUP BY (time(0d0h0m1s0u, 0d0h0m0s10u)), "tag1"
(3 rows)

SELECT sum("value1"),influx_time(time,interval '1s', interval '0.00001s'),tag1 FROM "t4" WHERE time >= '1970-01-01 00:00:00+00' and time <= '1970-01-01 0:00:05+00' 
GROUP BY influx_time(time,interval '1s', interval '0.00001s'), tag1;
 sum |         influx_time          | tag1 
-----+------------------------------+------
   1 | 1969-12-31 23:59:59.00001+00 | a
   2 | 1970-01-01 00:00:00.00001+00 | a
   3 | 1970-01-01 00:00:01.00001+00 | a
     | 1970-01-01 00:00:02.00001+00 | a
     | 1970-01-01 00:00:03.00001+00 | a
     | 1970-01-01 00:00:04.00001+00 | a
     | 1969-12-31 23:59:59.00001+00 | b
     | 1970-01-01 00:00:00.00001+00 | b
     | 1970-01-01 00:00:01.00001+00 | b
  10 | 1970-01-01 00:00:02.00001+00 | b
  20 | 1970-01-01 00:00:03.00001+00 | b
  30 | 1970-01-01 00:00:04.00001+00 | b
(12 rows)

EXPLAIN (verbose) 
SELECT tag1,sum("value1"),tag2 FROM "t4" WHERE time >= '1970-01-01 00:00:00+00' and time <= '1970-01-01 0:00:05+00' 
 GROUP BY tag2, tag1;
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=72)
   Output: tag1, (sum(value1)), tag2
   InfluxDB query: SELECT sum("value1") FROM "t4" WHERE ((time >= '1970-01-01 00:00:00')) AND ((time <= '1970-01-01 00:00:05')) GROUP BY "tag2", "tag1"
(3 rows)

SELECT tag1,sum("value1"),tag2 FROM "t4" WHERE time >= '1970-01-01 00:00:00+00' and time <= '1970-01-01 0:00:05+00' 
 GROUP BY tag2, tag1;
 tag1 | sum | tag2 
------+-----+------
 a    |   4 | x
 a    |   2 | y
 b    |  10 | y
 b    |  50 | z
(4 rows)

SELECT tag1,sum("value1"), count(value1), tag2 FROM "t4" group by tag1, tag2;
 tag1 | sum | count | tag2 
------+-----+-------+------
 a    |   4 |     2 | x
 a    |   2 |     1 | y
 b    |  10 |     1 | y
 b    |  50 |     2 | z
(4 rows)

EXPLAIN (verbose)  SELECT tag1,sum("value1"), count(value1), tag2 FROM "t4" group by tag1, tag2;
                                        QUERY PLAN                                         
-------------------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=80)
   Output: tag1, (sum(value1)), (count(value1)), tag2
   InfluxDB query: SELECT sum("value1"), count("value1") FROM "t4" GROUP BY "tag1", "tag2"
(3 rows)

SELECT influx_time(time,interval '5s',interval '0s'),tag1,last(time, value1) FROM "t4" WHERE time >= '1970-01-01 00:00:00+00' and time <= '1970-01-01 0:00:05+00' 
 GROUP BY influx_time(time,interval '5s', interval '0s'), tag1;
      influx_time       | tag1 | last 
------------------------+------+------
 1970-01-01 00:00:00+00 | a    |    3
 1970-01-01 00:00:05+00 | a    |     
 1970-01-01 00:00:00+00 | b    |   20
 1970-01-01 00:00:05+00 | b    |   30
(4 rows)

EXPLAIN (VERBOSE)
SELECT influx_time(time,interval '5s',interval '0s'),tag1,last(time, value1) FROM "t4" WHERE time >= '1970-01-01 00:00:00+00' and time <= '1970-01-01 0:00:05+00' 
GROUP BY influx_time(time,interval '5s', interval '0s'), tag1;
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=48)
   Output: (influx_time("time", '@ 5 secs'::interval, '@ 0'::interval)), tag1, (last("time", value1))
   InfluxDB query: SELECT last("value1") FROM "t4" WHERE ((time >= '1970-01-01 00:00:00')) AND ((time <= '1970-01-01 00:00:05')) GROUP BY (time(0d0h0m5s0u, 0d0h0m0s0u)), "tag1"
(3 rows)

-- no offset 
SELECT influx_time(time,interval '5s'),tag1,last(time, value1) FROM "t4" WHERE time >= '1970-01-01 00:00:00+00' and time <= '1970-01-01 0:00:05+00' 
GROUP BY influx_time(time,interval '5s'), tag1;
      influx_time       | tag1 | last 
------------------------+------+------
 1970-01-01 00:00:00+00 | a    |    3
 1970-01-01 00:00:05+00 | a    |     
 1970-01-01 00:00:00+00 | b    |   20
 1970-01-01 00:00:05+00 | b    |   30
(4 rows)

EXPLAIN (verbose) 
SELECT last(time, value1),last(time, value2) FROM t4 GROUP BY tag1;
                                    QUERY PLAN                                     
-----------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=48)
   Output: (last("time", value1)), (last("time", value2)), tag1
   InfluxDB query: SELECT last("value1"), last("value2") FROM "t4" GROUP BY "tag1"
(3 rows)

SELECT last(time, value1),last(time, value2) FROM t4 GROUP BY tag1;
 last | last 
------+------
    3 |  100
   30 |  200
(2 rows)

-- InfluxDB does not return error for the following query
--SELECT sum(value1) FROM t4 GROUP BY value1;
-- not allowed
SELECT sum(value1) FROM t4 GROUP BY time;
 sum 
-----
  30
  20
  10
   1
   2
   3
(6 rows)

--last returns NULL for tag
--SELECT last(time, value1),last(time, value2),last(time, tag1) FROM t4 GROUP BY tag1;
DROP FOREIGN TABLE t3;
DROP FOREIGN TABLE t4;
DROP FOREIGN TABLE cpu;
DROP USER MAPPING FOR CURRENT_USER SERVER server1;
DROP SERVER server1;
DROP EXTENSION influxdb_fdw ;
